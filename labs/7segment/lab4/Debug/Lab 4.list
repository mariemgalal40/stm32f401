
Lab 4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000468  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  080005fc  080005fc  000105fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  4 .ARM          00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000608  08000610  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000608  08000608  00010608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800060c  0800060c  0001060c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000610  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000610  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010610  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b8e  00000000  00000000  00010640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000320  00000000  00000000  000111ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  000114f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00011588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000de7f  00000000  00000000  000115e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000102c  00000000  00000000  0001f467  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fc4b  00000000  00000000  00020493  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000700de  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  00070134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005e4 	.word	0x080005e4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080005e4 	.word	0x080005e4

080001d4 <main>:
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"

int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b088      	sub	sp, #32
 80001d8:	af00      	add	r7, sp, #0
	unsigned char arr[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
 80001da:	4a26      	ldr	r2, [pc, #152]	; (8000274 <main+0xa0>)
 80001dc:	1d3b      	adds	r3, r7, #4
 80001de:	ca07      	ldmia	r2, {r0, r1, r2}
 80001e0:	c303      	stmia	r3!, {r0, r1}
 80001e2:	801a      	strh	r2, [r3, #0]
	unsigned char counter ;
	int i,j,k;

	//for making the 7 pins in port A output
	for (i=0;i<7;i++){
 80001e4:	2300      	movs	r3, #0
 80001e6:	61bb      	str	r3, [r7, #24]
 80001e8:	e008      	b.n	80001fc <main+0x28>
	GPIO_Init('A', i , OUTPUT, PUSH_PULL);
 80001ea:	69b9      	ldr	r1, [r7, #24]
 80001ec:	2300      	movs	r3, #0
 80001ee:	2201      	movs	r2, #1
 80001f0:	2041      	movs	r0, #65	; 0x41
 80001f2:	f000 f87f 	bl	80002f4 <GPIO_Init>
	for (i=0;i<7;i++){
 80001f6:	69bb      	ldr	r3, [r7, #24]
 80001f8:	3301      	adds	r3, #1
 80001fa:	61bb      	str	r3, [r7, #24]
 80001fc:	69bb      	ldr	r3, [r7, #24]
 80001fe:	2b06      	cmp	r3, #6
 8000200:	ddf3      	ble.n	80001ea <main+0x16>
	}
  while (1) {
	  //for looping into the array
	  for (counter=0;counter<=9;counter++){
 8000202:	2300      	movs	r3, #0
 8000204:	77fb      	strb	r3, [r7, #31]
 8000206:	e030      	b.n	800026a <main+0x96>
          // for comparing every pin to set it high or low
		  for(j=0;j<7;j++){
 8000208:	2300      	movs	r3, #0
 800020a:	617b      	str	r3, [r7, #20]
 800020c:	e01d      	b.n	800024a <main+0x76>
			  if(arr[counter]& (1<<j)){
 800020e:	7ffb      	ldrb	r3, [r7, #31]
 8000210:	f107 0220 	add.w	r2, r7, #32
 8000214:	4413      	add	r3, r2
 8000216:	f813 3c1c 	ldrb.w	r3, [r3, #-28]
 800021a:	461a      	mov	r2, r3
 800021c:	697b      	ldr	r3, [r7, #20]
 800021e:	fa42 f303 	asr.w	r3, r2, r3
 8000222:	f003 0301 	and.w	r3, r3, #1
 8000226:	2b00      	cmp	r3, #0
 8000228:	d006      	beq.n	8000238 <main+0x64>
				  GPIO_WritePin('A', j, 1);
 800022a:	697b      	ldr	r3, [r7, #20]
 800022c:	2201      	movs	r2, #1
 800022e:	4619      	mov	r1, r3
 8000230:	2041      	movs	r0, #65	; 0x41
 8000232:	f000 f941 	bl	80004b8 <GPIO_WritePin>
 8000236:	e005      	b.n	8000244 <main+0x70>
			  }
			  else {
				  GPIO_WritePin('A', j, 0);
 8000238:	697b      	ldr	r3, [r7, #20]
 800023a:	2200      	movs	r2, #0
 800023c:	4619      	mov	r1, r3
 800023e:	2041      	movs	r0, #65	; 0x41
 8000240:	f000 f93a 	bl	80004b8 <GPIO_WritePin>
		  for(j=0;j<7;j++){
 8000244:	697b      	ldr	r3, [r7, #20]
 8000246:	3301      	adds	r3, #1
 8000248:	617b      	str	r3, [r7, #20]
 800024a:	697b      	ldr	r3, [r7, #20]
 800024c:	2b06      	cmp	r3, #6
 800024e:	ddde      	ble.n	800020e <main+0x3a>
			  }
		  }
		  //delay
		  for (k = 0; k < 1000000; k++)
 8000250:	2300      	movs	r3, #0
 8000252:	613b      	str	r3, [r7, #16]
 8000254:	e002      	b.n	800025c <main+0x88>
 8000256:	693b      	ldr	r3, [r7, #16]
 8000258:	3301      	adds	r3, #1
 800025a:	613b      	str	r3, [r7, #16]
 800025c:	693b      	ldr	r3, [r7, #16]
 800025e:	4a06      	ldr	r2, [pc, #24]	; (8000278 <main+0xa4>)
 8000260:	4293      	cmp	r3, r2
 8000262:	ddf8      	ble.n	8000256 <main+0x82>
	  for (counter=0;counter<=9;counter++){
 8000264:	7ffb      	ldrb	r3, [r7, #31]
 8000266:	3301      	adds	r3, #1
 8000268:	77fb      	strb	r3, [r7, #31]
 800026a:	7ffb      	ldrb	r3, [r7, #31]
 800026c:	2b09      	cmp	r3, #9
 800026e:	d9cb      	bls.n	8000208 <main+0x34>
 8000270:	e7c7      	b.n	8000202 <main+0x2e>
 8000272:	bf00      	nop
 8000274:	080005fc 	.word	0x080005fc
 8000278:	000f423f 	.word	0x000f423f

0800027c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800027c:	b480      	push	{r7}
 800027e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000280:	4b06      	ldr	r3, [pc, #24]	; (800029c <SystemInit+0x20>)
 8000282:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000286:	4a05      	ldr	r2, [pc, #20]	; (800029c <SystemInit+0x20>)
 8000288:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800028c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000290:	bf00      	nop
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr
 800029a:	bf00      	nop
 800029c:	e000ed00 	.word	0xe000ed00

080002a0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002a0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80002d8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80002a6:	490e      	ldr	r1, [pc, #56]	; (80002e0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80002a8:	4a0e      	ldr	r2, [pc, #56]	; (80002e4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0b      	ldr	r2, [pc, #44]	; (80002e8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80002bc:	4c0b      	ldr	r4, [pc, #44]	; (80002ec <LoopFillZerobss+0x26>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80002ca:	f7ff ffd7 	bl	800027c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80002ce:	f000 f965 	bl	800059c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002d2:	f7ff ff7f 	bl	80001d4 <main>
  bx  lr    
 80002d6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002d8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	08000610 	.word	0x08000610
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <GPIO_Init>:
 */
#include "GPIO.h"
#include "stm32f401xc.h"
#include "stm32f401cc_interface.h"
void GPIO_Init( char Port, unsigned int PIN_NO, unsigned int PIN_Dir, unsigned int Default_State)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b085      	sub	sp, #20
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	60b9      	str	r1, [r7, #8]
 80002fc:	607a      	str	r2, [r7, #4]
 80002fe:	603b      	str	r3, [r7, #0]
 8000300:	4603      	mov	r3, r0
 8000302:	73fb      	strb	r3, [r7, #15]
	//enable clock of port
	switch (Port)
 8000304:	7bfb      	ldrb	r3, [r7, #15]
 8000306:	2b41      	cmp	r3, #65	; 0x41
 8000308:	d002      	beq.n	8000310 <GPIO_Init+0x1c>
 800030a:	2b42      	cmp	r3, #66	; 0x42
 800030c:	d064      	beq.n	80003d8 <GPIO_Init+0xe4>
					break;
				}//end switch
		break;
	}

}
 800030e:	e0c7      	b.n	80004a0 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<0);
 8000310:	4b66      	ldr	r3, [pc, #408]	; (80004ac <GPIO_Init+0x1b8>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a65      	ldr	r2, [pc, #404]	; (80004ac <GPIO_Init+0x1b8>)
 8000316:	f043 0301 	orr.w	r3, r3, #1
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	2b03      	cmp	r3, #3
 8000320:	d83b      	bhi.n	800039a <GPIO_Init+0xa6>
 8000322:	a201      	add	r2, pc, #4	; (adr r2, 8000328 <GPIO_Init+0x34>)
 8000324:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000328:	08000339 	.word	0x08000339
 800032c:	08000353 	.word	0x08000353
 8000330:	0800036b 	.word	0x0800036b
 8000334:	08000383 	.word	0x08000383
							GPIOA_MODER &= ~(0x03 << 2*PIN_NO);
 8000338:	4b5d      	ldr	r3, [pc, #372]	; (80004b0 <GPIO_Init+0x1bc>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	68ba      	ldr	r2, [r7, #8]
 800033e:	0052      	lsls	r2, r2, #1
 8000340:	2103      	movs	r1, #3
 8000342:	fa01 f202 	lsl.w	r2, r1, r2
 8000346:	43d2      	mvns	r2, r2
 8000348:	4611      	mov	r1, r2
 800034a:	4a59      	ldr	r2, [pc, #356]	; (80004b0 <GPIO_Init+0x1bc>)
 800034c:	400b      	ands	r3, r1
 800034e:	6013      	str	r3, [r2, #0]
					break;
 8000350:	e023      	b.n	800039a <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x01 << 2*PIN_NO);
 8000352:	4b57      	ldr	r3, [pc, #348]	; (80004b0 <GPIO_Init+0x1bc>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	68ba      	ldr	r2, [r7, #8]
 8000358:	0052      	lsls	r2, r2, #1
 800035a:	2101      	movs	r1, #1
 800035c:	fa01 f202 	lsl.w	r2, r1, r2
 8000360:	4611      	mov	r1, r2
 8000362:	4a53      	ldr	r2, [pc, #332]	; (80004b0 <GPIO_Init+0x1bc>)
 8000364:	430b      	orrs	r3, r1
 8000366:	6013      	str	r3, [r2, #0]
					break;
 8000368:	e017      	b.n	800039a <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x02 << 2*PIN_NO);
 800036a:	4b51      	ldr	r3, [pc, #324]	; (80004b0 <GPIO_Init+0x1bc>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	68ba      	ldr	r2, [r7, #8]
 8000370:	0052      	lsls	r2, r2, #1
 8000372:	2102      	movs	r1, #2
 8000374:	fa01 f202 	lsl.w	r2, r1, r2
 8000378:	4611      	mov	r1, r2
 800037a:	4a4d      	ldr	r2, [pc, #308]	; (80004b0 <GPIO_Init+0x1bc>)
 800037c:	430b      	orrs	r3, r1
 800037e:	6013      	str	r3, [r2, #0]
					break;
 8000380:	e00b      	b.n	800039a <GPIO_Init+0xa6>
							GPIOA_MODER |= (0x03 << 2*PIN_NO);
 8000382:	4b4b      	ldr	r3, [pc, #300]	; (80004b0 <GPIO_Init+0x1bc>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	68ba      	ldr	r2, [r7, #8]
 8000388:	0052      	lsls	r2, r2, #1
 800038a:	2103      	movs	r1, #3
 800038c:	fa01 f202 	lsl.w	r2, r1, r2
 8000390:	4611      	mov	r1, r2
 8000392:	4a47      	ldr	r2, [pc, #284]	; (80004b0 <GPIO_Init+0x1bc>)
 8000394:	430b      	orrs	r3, r1
 8000396:	6013      	str	r3, [r2, #0]
					break;
 8000398:	bf00      	nop
 800039a:	683b      	ldr	r3, [r7, #0]
 800039c:	2b00      	cmp	r3, #0
 800039e:	d003      	beq.n	80003a8 <GPIO_Init+0xb4>
 80003a0:	683b      	ldr	r3, [r7, #0]
 80003a2:	2b01      	cmp	r3, #1
 80003a4:	d00c      	beq.n	80003c0 <GPIO_Init+0xcc>
		break;
 80003a6:	e07b      	b.n	80004a0 <GPIO_Init+0x1ac>
							GPIOA_OTYPER &= ~(0x01<<PIN_NO);
 80003a8:	4b41      	ldr	r3, [pc, #260]	; (80004b0 <GPIO_Init+0x1bc>)
 80003aa:	685b      	ldr	r3, [r3, #4]
 80003ac:	2101      	movs	r1, #1
 80003ae:	68ba      	ldr	r2, [r7, #8]
 80003b0:	fa01 f202 	lsl.w	r2, r1, r2
 80003b4:	43d2      	mvns	r2, r2
 80003b6:	4611      	mov	r1, r2
 80003b8:	4a3d      	ldr	r2, [pc, #244]	; (80004b0 <GPIO_Init+0x1bc>)
 80003ba:	400b      	ands	r3, r1
 80003bc:	6053      	str	r3, [r2, #4]
					break;
 80003be:	e00a      	b.n	80003d6 <GPIO_Init+0xe2>
							GPIOA_OTYPER |= (0x01<<PIN_NO);
 80003c0:	4b3b      	ldr	r3, [pc, #236]	; (80004b0 <GPIO_Init+0x1bc>)
 80003c2:	685b      	ldr	r3, [r3, #4]
 80003c4:	2101      	movs	r1, #1
 80003c6:	68ba      	ldr	r2, [r7, #8]
 80003c8:	fa01 f202 	lsl.w	r2, r1, r2
 80003cc:	4611      	mov	r1, r2
 80003ce:	4a38      	ldr	r2, [pc, #224]	; (80004b0 <GPIO_Init+0x1bc>)
 80003d0:	430b      	orrs	r3, r1
 80003d2:	6053      	str	r3, [r2, #4]
					break;
 80003d4:	bf00      	nop
		break;
 80003d6:	e063      	b.n	80004a0 <GPIO_Init+0x1ac>
				RCC_AHB1ENR |= (0x01 <<1);
 80003d8:	4b34      	ldr	r3, [pc, #208]	; (80004ac <GPIO_Init+0x1b8>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a33      	ldr	r2, [pc, #204]	; (80004ac <GPIO_Init+0x1b8>)
 80003de:	f043 0302 	orr.w	r3, r3, #2
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	2b03      	cmp	r3, #3
 80003e8:	d83b      	bhi.n	8000462 <GPIO_Init+0x16e>
 80003ea:	a201      	add	r2, pc, #4	; (adr r2, 80003f0 <GPIO_Init+0xfc>)
 80003ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003f0:	08000401 	.word	0x08000401
 80003f4:	0800041b 	.word	0x0800041b
 80003f8:	08000433 	.word	0x08000433
 80003fc:	0800044b 	.word	0x0800044b
							GPIOB_MODER &= ~(0x03 << 2*PIN_NO);
 8000400:	4b2c      	ldr	r3, [pc, #176]	; (80004b4 <GPIO_Init+0x1c0>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	68ba      	ldr	r2, [r7, #8]
 8000406:	0052      	lsls	r2, r2, #1
 8000408:	2103      	movs	r1, #3
 800040a:	fa01 f202 	lsl.w	r2, r1, r2
 800040e:	43d2      	mvns	r2, r2
 8000410:	4611      	mov	r1, r2
 8000412:	4a28      	ldr	r2, [pc, #160]	; (80004b4 <GPIO_Init+0x1c0>)
 8000414:	400b      	ands	r3, r1
 8000416:	6013      	str	r3, [r2, #0]
					break;
 8000418:	e023      	b.n	8000462 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x01 << 2*PIN_NO);
 800041a:	4b26      	ldr	r3, [pc, #152]	; (80004b4 <GPIO_Init+0x1c0>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	68ba      	ldr	r2, [r7, #8]
 8000420:	0052      	lsls	r2, r2, #1
 8000422:	2101      	movs	r1, #1
 8000424:	fa01 f202 	lsl.w	r2, r1, r2
 8000428:	4611      	mov	r1, r2
 800042a:	4a22      	ldr	r2, [pc, #136]	; (80004b4 <GPIO_Init+0x1c0>)
 800042c:	430b      	orrs	r3, r1
 800042e:	6013      	str	r3, [r2, #0]
					break;
 8000430:	e017      	b.n	8000462 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x02 << 2*PIN_NO);
 8000432:	4b20      	ldr	r3, [pc, #128]	; (80004b4 <GPIO_Init+0x1c0>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	68ba      	ldr	r2, [r7, #8]
 8000438:	0052      	lsls	r2, r2, #1
 800043a:	2102      	movs	r1, #2
 800043c:	fa01 f202 	lsl.w	r2, r1, r2
 8000440:	4611      	mov	r1, r2
 8000442:	4a1c      	ldr	r2, [pc, #112]	; (80004b4 <GPIO_Init+0x1c0>)
 8000444:	430b      	orrs	r3, r1
 8000446:	6013      	str	r3, [r2, #0]
					break;
 8000448:	e00b      	b.n	8000462 <GPIO_Init+0x16e>
							GPIOB_MODER |= (0x03 << 2*PIN_NO);
 800044a:	4b1a      	ldr	r3, [pc, #104]	; (80004b4 <GPIO_Init+0x1c0>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	68ba      	ldr	r2, [r7, #8]
 8000450:	0052      	lsls	r2, r2, #1
 8000452:	2103      	movs	r1, #3
 8000454:	fa01 f202 	lsl.w	r2, r1, r2
 8000458:	4611      	mov	r1, r2
 800045a:	4a16      	ldr	r2, [pc, #88]	; (80004b4 <GPIO_Init+0x1c0>)
 800045c:	430b      	orrs	r3, r1
 800045e:	6013      	str	r3, [r2, #0]
					break;
 8000460:	bf00      	nop
 8000462:	683b      	ldr	r3, [r7, #0]
 8000464:	2b00      	cmp	r3, #0
 8000466:	d003      	beq.n	8000470 <GPIO_Init+0x17c>
 8000468:	683b      	ldr	r3, [r7, #0]
 800046a:	2b01      	cmp	r3, #1
 800046c:	d00c      	beq.n	8000488 <GPIO_Init+0x194>
		break;
 800046e:	e016      	b.n	800049e <GPIO_Init+0x1aa>
							GPIOB_OTYPER &= ~(0x01<<PIN_NO);
 8000470:	4b10      	ldr	r3, [pc, #64]	; (80004b4 <GPIO_Init+0x1c0>)
 8000472:	685b      	ldr	r3, [r3, #4]
 8000474:	2101      	movs	r1, #1
 8000476:	68ba      	ldr	r2, [r7, #8]
 8000478:	fa01 f202 	lsl.w	r2, r1, r2
 800047c:	43d2      	mvns	r2, r2
 800047e:	4611      	mov	r1, r2
 8000480:	4a0c      	ldr	r2, [pc, #48]	; (80004b4 <GPIO_Init+0x1c0>)
 8000482:	400b      	ands	r3, r1
 8000484:	6053      	str	r3, [r2, #4]
					break;
 8000486:	e00a      	b.n	800049e <GPIO_Init+0x1aa>
							GPIOB_OTYPER |= (0x01<<PIN_NO);
 8000488:	4b0a      	ldr	r3, [pc, #40]	; (80004b4 <GPIO_Init+0x1c0>)
 800048a:	685b      	ldr	r3, [r3, #4]
 800048c:	2101      	movs	r1, #1
 800048e:	68ba      	ldr	r2, [r7, #8]
 8000490:	fa01 f202 	lsl.w	r2, r1, r2
 8000494:	4611      	mov	r1, r2
 8000496:	4a07      	ldr	r2, [pc, #28]	; (80004b4 <GPIO_Init+0x1c0>)
 8000498:	430b      	orrs	r3, r1
 800049a:	6053      	str	r3, [r2, #4]
					break;
 800049c:	bf00      	nop
		break;
 800049e:	bf00      	nop
}
 80004a0:	bf00      	nop
 80004a2:	3714      	adds	r7, #20
 80004a4:	46bd      	mov	sp, r7
 80004a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004aa:	4770      	bx	lr
 80004ac:	40023800 	.word	0x40023800
 80004b0:	40020000 	.word	0x40020000
 80004b4:	40020400 	.word	0x40020400

080004b8 <GPIO_WritePin>:

unsigned char GPIO_WritePin(char Port, unsigned int PIN_NO, unsigned int Data)
{
 80004b8:	b480      	push	{r7}
 80004ba:	b087      	sub	sp, #28
 80004bc:	af00      	add	r7, sp, #0
 80004be:	4603      	mov	r3, r0
 80004c0:	60b9      	str	r1, [r7, #8]
 80004c2:	607a      	str	r2, [r7, #4]
 80004c4:	73fb      	strb	r3, [r7, #15]
	unsigned char result;
	switch(Port)
 80004c6:	7bfb      	ldrb	r3, [r7, #15]
 80004c8:	2b41      	cmp	r3, #65	; 0x41
 80004ca:	d002      	beq.n	80004d2 <GPIO_WritePin+0x1a>
 80004cc:	2b42      	cmp	r3, #66	; 0x42
 80004ce:	d02d      	beq.n	800052c <GPIO_WritePin+0x74>
 80004d0:	e059      	b.n	8000586 <GPIO_WritePin+0xce>
	{
		case('A'):
			if((GPIOA_MODER & (0x03 << 2*PIN_NO)) >> (2*PIN_NO) == 1)
 80004d2:	4b30      	ldr	r3, [pc, #192]	; (8000594 <GPIO_WritePin+0xdc>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	68ba      	ldr	r2, [r7, #8]
 80004d8:	0052      	lsls	r2, r2, #1
 80004da:	2103      	movs	r1, #3
 80004dc:	fa01 f202 	lsl.w	r2, r1, r2
 80004e0:	401a      	ands	r2, r3
 80004e2:	68bb      	ldr	r3, [r7, #8]
 80004e4:	005b      	lsls	r3, r3, #1
 80004e6:	fa22 f303 	lsr.w	r3, r2, r3
 80004ea:	2b01      	cmp	r3, #1
 80004ec:	d11b      	bne.n	8000526 <GPIO_WritePin+0x6e>
			{
			     if(Data)
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d00a      	beq.n	800050a <GPIO_WritePin+0x52>
			     {
			    	 GPIOA_ODR |= (1<<PIN_NO);
 80004f4:	4b27      	ldr	r3, [pc, #156]	; (8000594 <GPIO_WritePin+0xdc>)
 80004f6:	695b      	ldr	r3, [r3, #20]
 80004f8:	2101      	movs	r1, #1
 80004fa:	68ba      	ldr	r2, [r7, #8]
 80004fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000500:	4611      	mov	r1, r2
 8000502:	4a24      	ldr	r2, [pc, #144]	; (8000594 <GPIO_WritePin+0xdc>)
 8000504:	430b      	orrs	r3, r1
 8000506:	6153      	str	r3, [r2, #20]
 8000508:	e00a      	b.n	8000520 <GPIO_WritePin+0x68>
			     }
			     else
			     {
			    	 GPIOA_ODR &= ~(1<<PIN_NO);
 800050a:	4b22      	ldr	r3, [pc, #136]	; (8000594 <GPIO_WritePin+0xdc>)
 800050c:	695b      	ldr	r3, [r3, #20]
 800050e:	2101      	movs	r1, #1
 8000510:	68ba      	ldr	r2, [r7, #8]
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	43d2      	mvns	r2, r2
 8000518:	4611      	mov	r1, r2
 800051a:	4a1e      	ldr	r2, [pc, #120]	; (8000594 <GPIO_WritePin+0xdc>)
 800051c:	400b      	ands	r3, r1
 800051e:	6153      	str	r3, [r2, #20]
			     }
				result = OK;
 8000520:	2300      	movs	r3, #0
 8000522:	75fb      	strb	r3, [r7, #23]
			}
			else
			{
				result = NOK;
			}
		break;
 8000524:	e02f      	b.n	8000586 <GPIO_WritePin+0xce>
				result = NOK;
 8000526:	2301      	movs	r3, #1
 8000528:	75fb      	strb	r3, [r7, #23]
		break;
 800052a:	e02c      	b.n	8000586 <GPIO_WritePin+0xce>
		case('B'):
				if((GPIOB_MODER & (0x01 << 2*PIN_NO))>> (2*PIN_NO))
 800052c:	4b1a      	ldr	r3, [pc, #104]	; (8000598 <GPIO_WritePin+0xe0>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	68ba      	ldr	r2, [r7, #8]
 8000532:	0052      	lsls	r2, r2, #1
 8000534:	2101      	movs	r1, #1
 8000536:	fa01 f202 	lsl.w	r2, r1, r2
 800053a:	401a      	ands	r2, r3
 800053c:	68bb      	ldr	r3, [r7, #8]
 800053e:	005b      	lsls	r3, r3, #1
 8000540:	fa22 f303 	lsr.w	r3, r2, r3
 8000544:	2b00      	cmp	r3, #0
 8000546:	d01b      	beq.n	8000580 <GPIO_WritePin+0xc8>
				{
					 if(Data)
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	2b00      	cmp	r3, #0
 800054c:	d00a      	beq.n	8000564 <GPIO_WritePin+0xac>
					 {
						 GPIOB_ODR |= (1<<PIN_NO);
 800054e:	4b12      	ldr	r3, [pc, #72]	; (8000598 <GPIO_WritePin+0xe0>)
 8000550:	695b      	ldr	r3, [r3, #20]
 8000552:	2101      	movs	r1, #1
 8000554:	68ba      	ldr	r2, [r7, #8]
 8000556:	fa01 f202 	lsl.w	r2, r1, r2
 800055a:	4611      	mov	r1, r2
 800055c:	4a0e      	ldr	r2, [pc, #56]	; (8000598 <GPIO_WritePin+0xe0>)
 800055e:	430b      	orrs	r3, r1
 8000560:	6153      	str	r3, [r2, #20]
 8000562:	e00a      	b.n	800057a <GPIO_WritePin+0xc2>
					 }
					 else
					 {
						 GPIOB_ODR &= ~(1<<PIN_NO);
 8000564:	4b0c      	ldr	r3, [pc, #48]	; (8000598 <GPIO_WritePin+0xe0>)
 8000566:	695b      	ldr	r3, [r3, #20]
 8000568:	2101      	movs	r1, #1
 800056a:	68ba      	ldr	r2, [r7, #8]
 800056c:	fa01 f202 	lsl.w	r2, r1, r2
 8000570:	43d2      	mvns	r2, r2
 8000572:	4611      	mov	r1, r2
 8000574:	4a08      	ldr	r2, [pc, #32]	; (8000598 <GPIO_WritePin+0xe0>)
 8000576:	400b      	ands	r3, r1
 8000578:	6153      	str	r3, [r2, #20]
					 }
					result = OK;
 800057a:	2300      	movs	r3, #0
 800057c:	75fb      	strb	r3, [r7, #23]
				else
				{
					result = NOK;
				}

		break;
 800057e:	e001      	b.n	8000584 <GPIO_WritePin+0xcc>
					result = NOK;
 8000580:	2301      	movs	r3, #1
 8000582:	75fb      	strb	r3, [r7, #23]
		break;
 8000584:	bf00      	nop

	}// end switch

	return result;
 8000586:	7dfb      	ldrb	r3, [r7, #23]
}
 8000588:	4618      	mov	r0, r3
 800058a:	371c      	adds	r7, #28
 800058c:	46bd      	mov	sp, r7
 800058e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000592:	4770      	bx	lr
 8000594:	40020000 	.word	0x40020000
 8000598:	40020400 	.word	0x40020400

0800059c <__libc_init_array>:
 800059c:	b570      	push	{r4, r5, r6, lr}
 800059e:	4d0d      	ldr	r5, [pc, #52]	; (80005d4 <__libc_init_array+0x38>)
 80005a0:	4c0d      	ldr	r4, [pc, #52]	; (80005d8 <__libc_init_array+0x3c>)
 80005a2:	1b64      	subs	r4, r4, r5
 80005a4:	10a4      	asrs	r4, r4, #2
 80005a6:	2600      	movs	r6, #0
 80005a8:	42a6      	cmp	r6, r4
 80005aa:	d109      	bne.n	80005c0 <__libc_init_array+0x24>
 80005ac:	4d0b      	ldr	r5, [pc, #44]	; (80005dc <__libc_init_array+0x40>)
 80005ae:	4c0c      	ldr	r4, [pc, #48]	; (80005e0 <__libc_init_array+0x44>)
 80005b0:	f000 f818 	bl	80005e4 <_init>
 80005b4:	1b64      	subs	r4, r4, r5
 80005b6:	10a4      	asrs	r4, r4, #2
 80005b8:	2600      	movs	r6, #0
 80005ba:	42a6      	cmp	r6, r4
 80005bc:	d105      	bne.n	80005ca <__libc_init_array+0x2e>
 80005be:	bd70      	pop	{r4, r5, r6, pc}
 80005c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c4:	4798      	blx	r3
 80005c6:	3601      	adds	r6, #1
 80005c8:	e7ee      	b.n	80005a8 <__libc_init_array+0xc>
 80005ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ce:	4798      	blx	r3
 80005d0:	3601      	adds	r6, #1
 80005d2:	e7f2      	b.n	80005ba <__libc_init_array+0x1e>
 80005d4:	08000608 	.word	0x08000608
 80005d8:	08000608 	.word	0x08000608
 80005dc:	08000608 	.word	0x08000608
 80005e0:	0800060c 	.word	0x0800060c

080005e4 <_init>:
 80005e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005e6:	bf00      	nop
 80005e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ea:	bc08      	pop	{r3}
 80005ec:	469e      	mov	lr, r3
 80005ee:	4770      	bx	lr

080005f0 <_fini>:
 80005f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005f2:	bf00      	nop
 80005f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005f6:	bc08      	pop	{r3}
 80005f8:	469e      	mov	lr, r3
 80005fa:	4770      	bx	lr
