
lab6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000630  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007c4  080007c4  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007c4  080007c4  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  080007c4  080007c4  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007c4  080007c4  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007c4  080007c4  000107c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007c8  080007c8  000107c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  080007cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000068  08000834  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000834  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008cc  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000036d  00000000  00000000  00020964  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000e0  00000000  00000000  00020cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00020db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dcb3  00000000  00000000  00020e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000008eb  00000000  00000000  0002eb03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fbe1  00000000  00000000  0002f3ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007efcf  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001f4  00000000  00000000  0007f024  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000068 	.word	0x20000068
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007ac 	.word	0x080007ac

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000006c 	.word	0x2000006c
 80001d0:	080007ac 	.word	0x080007ac

080001d4 <GPIO_EnableClock>:

unsigned int *lookup[2][10]={{GPIOA_MODER,GPIOA_OTYPER,GPIOA_OSPEEDR,GPIOA_PUPDR,GPIOA_IDR,GPIOA_ODR,GPIOA_BSRR,GPIOA_LCKR,GPIOA_AFRL,GPIOA_AFRH},
		{GPIOB_MODER,GPIOB_OTYPER,GPIOB_OSPEEDR,GPIOB_PUPDR,GPIOB_IDR,GPIOB_ODR,GPIOB_BSRR,GPIOB_LCKR,GPIOB_AFRL,GPIOB_AFRH}};


void GPIO_EnableClock(unsigned char PORT_ID) {
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]

      *RCC_AHB1ENR |= (0x01 << PORT_ID);
 80001de:	4b08      	ldr	r3, [pc, #32]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	4611      	mov	r1, r2
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001ee:	430b      	orrs	r3, r1
 80001f0:	6013      	str	r3, [r2, #0]

}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	40023830 	.word	0x40023830

08000204 <GPIO_Init>:

void GPIO_Init(unsigned char PORT_ID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 8000204:	b490      	push	{r4, r7}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	4604      	mov	r4, r0
 800020c:	4608      	mov	r0, r1
 800020e:	4611      	mov	r1, r2
 8000210:	461a      	mov	r2, r3
 8000212:	4623      	mov	r3, r4
 8000214:	71fb      	strb	r3, [r7, #7]
 8000216:	4603      	mov	r3, r0
 8000218:	71bb      	strb	r3, [r7, #6]
 800021a:	460b      	mov	r3, r1
 800021c:	717b      	strb	r3, [r7, #5]
 800021e:	4613      	mov	r3, r2
 8000220:	713b      	strb	r3, [r7, #4]

      // Configure moder register for pin direction
	*lookup[PORT_ID][0] &= ~(0x03 << 2 * PinNum);
 8000222:	79fa      	ldrb	r2, [r7, #7]
 8000224:	4956      	ldr	r1, [pc, #344]	; (8000380 <GPIO_Init+0x17c>)
 8000226:	4613      	mov	r3, r2
 8000228:	009b      	lsls	r3, r3, #2
 800022a:	4413      	add	r3, r2
 800022c:	00db      	lsls	r3, r3, #3
 800022e:	440b      	add	r3, r1
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	6819      	ldr	r1, [r3, #0]
 8000234:	79bb      	ldrb	r3, [r7, #6]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	2203      	movs	r2, #3
 800023a:	fa02 f303 	lsl.w	r3, r2, r3
 800023e:	43db      	mvns	r3, r3
 8000240:	461c      	mov	r4, r3
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	484e      	ldr	r0, [pc, #312]	; (8000380 <GPIO_Init+0x17c>)
 8000246:	4613      	mov	r3, r2
 8000248:	009b      	lsls	r3, r3, #2
 800024a:	4413      	add	r3, r2
 800024c:	00db      	lsls	r3, r3, #3
 800024e:	4403      	add	r3, r0
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	ea01 0204 	and.w	r2, r1, r4
 8000256:	601a      	str	r2, [r3, #0]
	*lookup[PORT_ID][0] |= PinMode << 2 * PinNum;
 8000258:	79fa      	ldrb	r2, [r7, #7]
 800025a:	4949      	ldr	r1, [pc, #292]	; (8000380 <GPIO_Init+0x17c>)
 800025c:	4613      	mov	r3, r2
 800025e:	009b      	lsls	r3, r3, #2
 8000260:	4413      	add	r3, r2
 8000262:	00db      	lsls	r3, r3, #3
 8000264:	440b      	add	r3, r1
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	6819      	ldr	r1, [r3, #0]
 800026a:	797a      	ldrb	r2, [r7, #5]
 800026c:	79bb      	ldrb	r3, [r7, #6]
 800026e:	005b      	lsls	r3, r3, #1
 8000270:	fa02 f303 	lsl.w	r3, r2, r3
 8000274:	461c      	mov	r4, r3
 8000276:	79fa      	ldrb	r2, [r7, #7]
 8000278:	4841      	ldr	r0, [pc, #260]	; (8000380 <GPIO_Init+0x17c>)
 800027a:	4613      	mov	r3, r2
 800027c:	009b      	lsls	r3, r3, #2
 800027e:	4413      	add	r3, r2
 8000280:	00db      	lsls	r3, r3, #3
 8000282:	4403      	add	r3, r0
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	ea41 0204 	orr.w	r2, r1, r4
 800028a:	601a      	str	r2, [r3, #0]


	*lookup[PORT_ID][1] &= ~(1 << PinNum);
 800028c:	79fa      	ldrb	r2, [r7, #7]
 800028e:	493c      	ldr	r1, [pc, #240]	; (8000380 <GPIO_Init+0x17c>)
 8000290:	4613      	mov	r3, r2
 8000292:	009b      	lsls	r3, r3, #2
 8000294:	4413      	add	r3, r2
 8000296:	00db      	lsls	r3, r3, #3
 8000298:	440b      	add	r3, r1
 800029a:	3304      	adds	r3, #4
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	6819      	ldr	r1, [r3, #0]
 80002a0:	79bb      	ldrb	r3, [r7, #6]
 80002a2:	2201      	movs	r2, #1
 80002a4:	fa02 f303 	lsl.w	r3, r2, r3
 80002a8:	43db      	mvns	r3, r3
 80002aa:	461c      	mov	r4, r3
 80002ac:	79fa      	ldrb	r2, [r7, #7]
 80002ae:	4834      	ldr	r0, [pc, #208]	; (8000380 <GPIO_Init+0x17c>)
 80002b0:	4613      	mov	r3, r2
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	4413      	add	r3, r2
 80002b6:	00db      	lsls	r3, r3, #3
 80002b8:	4403      	add	r3, r0
 80002ba:	3304      	adds	r3, #4
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	ea01 0204 	and.w	r2, r1, r4
 80002c2:	601a      	str	r2, [r3, #0]
	*lookup[PORT_ID][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 80002c4:	79fa      	ldrb	r2, [r7, #7]
 80002c6:	492e      	ldr	r1, [pc, #184]	; (8000380 <GPIO_Init+0x17c>)
 80002c8:	4613      	mov	r3, r2
 80002ca:	009b      	lsls	r3, r3, #2
 80002cc:	4413      	add	r3, r2
 80002ce:	00db      	lsls	r3, r3, #3
 80002d0:	440b      	add	r3, r1
 80002d2:	3304      	adds	r3, #4
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	6819      	ldr	r1, [r3, #0]
 80002d8:	793b      	ldrb	r3, [r7, #4]
 80002da:	f003 0201 	and.w	r2, r3, #1
 80002de:	79bb      	ldrb	r3, [r7, #6]
 80002e0:	fa02 f303 	lsl.w	r3, r2, r3
 80002e4:	461c      	mov	r4, r3
 80002e6:	79fa      	ldrb	r2, [r7, #7]
 80002e8:	4825      	ldr	r0, [pc, #148]	; (8000380 <GPIO_Init+0x17c>)
 80002ea:	4613      	mov	r3, r2
 80002ec:	009b      	lsls	r3, r3, #2
 80002ee:	4413      	add	r3, r2
 80002f0:	00db      	lsls	r3, r3, #3
 80002f2:	4403      	add	r3, r0
 80002f4:	3304      	adds	r3, #4
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	ea41 0204 	orr.w	r2, r1, r4
 80002fc:	601a      	str	r2, [r3, #0]

	*lookup[PORT_ID][3] &= ~(0x03 << 2 * PinNum);
 80002fe:	79fa      	ldrb	r2, [r7, #7]
 8000300:	491f      	ldr	r1, [pc, #124]	; (8000380 <GPIO_Init+0x17c>)
 8000302:	4613      	mov	r3, r2
 8000304:	009b      	lsls	r3, r3, #2
 8000306:	4413      	add	r3, r2
 8000308:	00db      	lsls	r3, r3, #3
 800030a:	440b      	add	r3, r1
 800030c:	330c      	adds	r3, #12
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	6819      	ldr	r1, [r3, #0]
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	005b      	lsls	r3, r3, #1
 8000316:	2203      	movs	r2, #3
 8000318:	fa02 f303 	lsl.w	r3, r2, r3
 800031c:	43db      	mvns	r3, r3
 800031e:	461c      	mov	r4, r3
 8000320:	79fa      	ldrb	r2, [r7, #7]
 8000322:	4817      	ldr	r0, [pc, #92]	; (8000380 <GPIO_Init+0x17c>)
 8000324:	4613      	mov	r3, r2
 8000326:	009b      	lsls	r3, r3, #2
 8000328:	4413      	add	r3, r2
 800032a:	00db      	lsls	r3, r3, #3
 800032c:	4403      	add	r3, r0
 800032e:	330c      	adds	r3, #12
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	ea01 0204 	and.w	r2, r1, r4
 8000336:	601a      	str	r2, [r3, #0]
	*lookup[PORT_ID][3] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum);
 8000338:	79fa      	ldrb	r2, [r7, #7]
 800033a:	4911      	ldr	r1, [pc, #68]	; (8000380 <GPIO_Init+0x17c>)
 800033c:	4613      	mov	r3, r2
 800033e:	009b      	lsls	r3, r3, #2
 8000340:	4413      	add	r3, r2
 8000342:	00db      	lsls	r3, r3, #3
 8000344:	440b      	add	r3, r1
 8000346:	330c      	adds	r3, #12
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	6819      	ldr	r1, [r3, #0]
 800034c:	793b      	ldrb	r3, [r7, #4]
 800034e:	105b      	asrs	r3, r3, #1
 8000350:	f003 0203 	and.w	r2, r3, #3
 8000354:	79bb      	ldrb	r3, [r7, #6]
 8000356:	005b      	lsls	r3, r3, #1
 8000358:	fa02 f303 	lsl.w	r3, r2, r3
 800035c:	461c      	mov	r4, r3
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	4807      	ldr	r0, [pc, #28]	; (8000380 <GPIO_Init+0x17c>)
 8000362:	4613      	mov	r3, r2
 8000364:	009b      	lsls	r3, r3, #2
 8000366:	4413      	add	r3, r2
 8000368:	00db      	lsls	r3, r3, #3
 800036a:	4403      	add	r3, r0
 800036c:	330c      	adds	r3, #12
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	ea41 0204 	orr.w	r2, r1, r4
 8000374:	601a      	str	r2, [r3, #0]


}
 8000376:	bf00      	nop
 8000378:	3708      	adds	r7, #8
 800037a:	46bd      	mov	sp, r7
 800037c:	bc90      	pop	{r4, r7}
 800037e:	4770      	bx	lr
 8000380:	20000000 	.word	0x20000000

08000384 <GPIO_WritePin>:

unsigned char GPIO_WritePin(unsigned char PORT_ID, unsigned char PinNum,
                            unsigned char Data) {
 8000384:	b490      	push	{r4, r7}
 8000386:	b084      	sub	sp, #16
 8000388:	af00      	add	r7, sp, #0
 800038a:	4603      	mov	r3, r0
 800038c:	71fb      	strb	r3, [r7, #7]
 800038e:	460b      	mov	r3, r1
 8000390:	71bb      	strb	r3, [r7, #6]
 8000392:	4613      	mov	r3, r2
 8000394:	717b      	strb	r3, [r7, #5]
  unsigned char result;
      if (((*lookup[PORT_ID][0] & (0x03 << 2 * PinNum)) >> (2 * PinNum)) == 1) {
 8000396:	79fa      	ldrb	r2, [r7, #7]
 8000398:	492c      	ldr	r1, [pc, #176]	; (800044c <GPIO_WritePin+0xc8>)
 800039a:	4613      	mov	r3, r2
 800039c:	009b      	lsls	r3, r3, #2
 800039e:	4413      	add	r3, r2
 80003a0:	00db      	lsls	r3, r3, #3
 80003a2:	440b      	add	r3, r1
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	79ba      	ldrb	r2, [r7, #6]
 80003aa:	0052      	lsls	r2, r2, #1
 80003ac:	2103      	movs	r1, #3
 80003ae:	fa01 f202 	lsl.w	r2, r1, r2
 80003b2:	401a      	ands	r2, r3
 80003b4:	79bb      	ldrb	r3, [r7, #6]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa22 f303 	lsr.w	r3, r2, r3
 80003bc:	2b01      	cmp	r3, #1
 80003be:	d13d      	bne.n	800043c <GPIO_WritePin+0xb8>
        if (Data) {
 80003c0:	797b      	ldrb	r3, [r7, #5]
 80003c2:	2b00      	cmp	r3, #0
 80003c4:	d01b      	beq.n	80003fe <GPIO_WritePin+0x7a>
        	*lookup[PORT_ID][5] |= (1 << PinNum);
 80003c6:	79fa      	ldrb	r2, [r7, #7]
 80003c8:	4920      	ldr	r1, [pc, #128]	; (800044c <GPIO_WritePin+0xc8>)
 80003ca:	4613      	mov	r3, r2
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	4413      	add	r3, r2
 80003d0:	00db      	lsls	r3, r3, #3
 80003d2:	440b      	add	r3, r1
 80003d4:	3314      	adds	r3, #20
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	6819      	ldr	r1, [r3, #0]
 80003da:	79bb      	ldrb	r3, [r7, #6]
 80003dc:	2201      	movs	r2, #1
 80003de:	fa02 f303 	lsl.w	r3, r2, r3
 80003e2:	461c      	mov	r4, r3
 80003e4:	79fa      	ldrb	r2, [r7, #7]
 80003e6:	4819      	ldr	r0, [pc, #100]	; (800044c <GPIO_WritePin+0xc8>)
 80003e8:	4613      	mov	r3, r2
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	4413      	add	r3, r2
 80003ee:	00db      	lsls	r3, r3, #3
 80003f0:	4403      	add	r3, r0
 80003f2:	3314      	adds	r3, #20
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	ea41 0204 	orr.w	r2, r1, r4
 80003fa:	601a      	str	r2, [r3, #0]
 80003fc:	e01b      	b.n	8000436 <GPIO_WritePin+0xb2>
        } else {
        	*lookup[PORT_ID][5] &= ~(1 << PinNum);
 80003fe:	79fa      	ldrb	r2, [r7, #7]
 8000400:	4912      	ldr	r1, [pc, #72]	; (800044c <GPIO_WritePin+0xc8>)
 8000402:	4613      	mov	r3, r2
 8000404:	009b      	lsls	r3, r3, #2
 8000406:	4413      	add	r3, r2
 8000408:	00db      	lsls	r3, r3, #3
 800040a:	440b      	add	r3, r1
 800040c:	3314      	adds	r3, #20
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	6819      	ldr	r1, [r3, #0]
 8000412:	79bb      	ldrb	r3, [r7, #6]
 8000414:	2201      	movs	r2, #1
 8000416:	fa02 f303 	lsl.w	r3, r2, r3
 800041a:	43db      	mvns	r3, r3
 800041c:	461c      	mov	r4, r3
 800041e:	79fa      	ldrb	r2, [r7, #7]
 8000420:	480a      	ldr	r0, [pc, #40]	; (800044c <GPIO_WritePin+0xc8>)
 8000422:	4613      	mov	r3, r2
 8000424:	009b      	lsls	r3, r3, #2
 8000426:	4413      	add	r3, r2
 8000428:	00db      	lsls	r3, r3, #3
 800042a:	4403      	add	r3, r0
 800042c:	3314      	adds	r3, #20
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	ea01 0204 	and.w	r2, r1, r4
 8000434:	601a      	str	r2, [r3, #0]
        }
        result = OK;
 8000436:	2300      	movs	r3, #0
 8000438:	73fb      	strb	r3, [r7, #15]
 800043a:	e001      	b.n	8000440 <GPIO_WritePin+0xbc>
      } else {
        result = NOK;
 800043c:	2301      	movs	r3, #1
 800043e:	73fb      	strb	r3, [r7, #15]
      }


  return result;
 8000440:	7bfb      	ldrb	r3, [r7, #15]
}
 8000442:	4618      	mov	r0, r3
 8000444:	3710      	adds	r7, #16
 8000446:	46bd      	mov	sp, r7
 8000448:	bc90      	pop	{r4, r7}
 800044a:	4770      	bx	lr
 800044c:	20000000 	.word	0x20000000

08000450 <GPIO_ReadPin>:

unsigned char GPIO_ReadPin(unsigned char PORT_ID, unsigned char PinNum) {
 8000450:	b480      	push	{r7}
 8000452:	b085      	sub	sp, #20
 8000454:	af00      	add	r7, sp, #0
 8000456:	4603      	mov	r3, r0
 8000458:	460a      	mov	r2, r1
 800045a:	71fb      	strb	r3, [r7, #7]
 800045c:	4613      	mov	r3, r2
 800045e:	71bb      	strb	r3, [r7, #6]
  unsigned char data = 0;
 8000460:	2300      	movs	r3, #0
 8000462:	73fb      	strb	r3, [r7, #15]

      data = (*lookup[PORT_ID][4] & (1 << PinNum)) >> PinNum;
 8000464:	79fa      	ldrb	r2, [r7, #7]
 8000466:	4916      	ldr	r1, [pc, #88]	; (80004c0 <GPIO_ReadPin+0x70>)
 8000468:	4613      	mov	r3, r2
 800046a:	009b      	lsls	r3, r3, #2
 800046c:	4413      	add	r3, r2
 800046e:	00db      	lsls	r3, r3, #3
 8000470:	440b      	add	r3, r1
 8000472:	3310      	adds	r3, #16
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	79ba      	ldrb	r2, [r7, #6]
 800047a:	2101      	movs	r1, #1
 800047c:	fa01 f202 	lsl.w	r2, r1, r2
 8000480:	401a      	ands	r2, r3
 8000482:	79bb      	ldrb	r3, [r7, #6]
 8000484:	fa22 f303 	lsr.w	r3, r2, r3
 8000488:	73fb      	strb	r3, [r7, #15]

      data = (*lookup[PORT_ID][4] & (1 << PinNum)) >> PinNum;
 800048a:	79fa      	ldrb	r2, [r7, #7]
 800048c:	490c      	ldr	r1, [pc, #48]	; (80004c0 <GPIO_ReadPin+0x70>)
 800048e:	4613      	mov	r3, r2
 8000490:	009b      	lsls	r3, r3, #2
 8000492:	4413      	add	r3, r2
 8000494:	00db      	lsls	r3, r3, #3
 8000496:	440b      	add	r3, r1
 8000498:	3310      	adds	r3, #16
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	79ba      	ldrb	r2, [r7, #6]
 80004a0:	2101      	movs	r1, #1
 80004a2:	fa01 f202 	lsl.w	r2, r1, r2
 80004a6:	401a      	ands	r2, r3
 80004a8:	79bb      	ldrb	r3, [r7, #6]
 80004aa:	fa22 f303 	lsr.w	r3, r2, r3
 80004ae:	73fb      	strb	r3, [r7, #15]


  return data;
 80004b0:	7bfb      	ldrb	r3, [r7, #15]
}
 80004b2:	4618      	mov	r0, r3
 80004b4:	3714      	adds	r7, #20
 80004b6:	46bd      	mov	sp, r7
 80004b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	20000000 	.word	0x20000000

080004c4 <Keypdad_init>:
unsigned char key ;
unsigned char buttonState = 0;
unsigned char arr[4][3]={{1,2,3},{4,5,6},{7,8,9},{0,0,0}};
int k;
void Keypdad_init()
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	af00      	add	r7, sp, #0
	GPIO_Init(1, 0, OUTPUT, PUSH_PULL);
 80004c8:	2300      	movs	r3, #0
 80004ca:	2201      	movs	r2, #1
 80004cc:	2100      	movs	r1, #0
 80004ce:	2001      	movs	r0, #1
 80004d0:	f7ff fe98 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 1, OUTPUT, PUSH_PULL);
 80004d4:	2300      	movs	r3, #0
 80004d6:	2201      	movs	r2, #1
 80004d8:	2101      	movs	r1, #1
 80004da:	2001      	movs	r0, #1
 80004dc:	f7ff fe92 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 2, OUTPUT, PUSH_PULL);
 80004e0:	2300      	movs	r3, #0
 80004e2:	2201      	movs	r2, #1
 80004e4:	2102      	movs	r1, #2
 80004e6:	2001      	movs	r0, #1
 80004e8:	f7ff fe8c 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 3, INPUT, PULL_UP);
 80004ec:	2302      	movs	r3, #2
 80004ee:	2200      	movs	r2, #0
 80004f0:	2103      	movs	r1, #3
 80004f2:	2001      	movs	r0, #1
 80004f4:	f7ff fe86 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 4, INPUT, PULL_UP);
 80004f8:	2302      	movs	r3, #2
 80004fa:	2200      	movs	r2, #0
 80004fc:	2104      	movs	r1, #4
 80004fe:	2001      	movs	r0, #1
 8000500:	f7ff fe80 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 5, INPUT, PULL_UP);
 8000504:	2302      	movs	r3, #2
 8000506:	2200      	movs	r2, #0
 8000508:	2105      	movs	r1, #5
 800050a:	2001      	movs	r0, #1
 800050c:	f7ff fe7a 	bl	8000204 <GPIO_Init>
	GPIO_Init(1, 6, INPUT, PULL_UP);
 8000510:	2302      	movs	r3, #2
 8000512:	2200      	movs	r2, #0
 8000514:	2106      	movs	r1, #6
 8000516:	2001      	movs	r0, #1
 8000518:	f7ff fe74 	bl	8000204 <GPIO_Init>

	}
 800051c:	bf00      	nop
 800051e:	bd80      	pop	{r7, pc}

08000520 <Keypad_manage>:

void Keypad_manage()
{
 8000520:	b580      	push	{r7, lr}
 8000522:	b082      	sub	sp, #8
 8000524:	af00      	add	r7, sp, #0

	unsigned char row,column,x;
	if(buttonState == 0){
 8000526:	4b2f      	ldr	r3, [pc, #188]	; (80005e4 <Keypad_manage+0xc4>)
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	2b00      	cmp	r3, #0
 800052c:	d156      	bne.n	80005dc <Keypad_manage+0xbc>
	 for(column=0;column<3;column++)
 800052e:	2300      	movs	r3, #0
 8000530:	71bb      	strb	r3, [r7, #6]
 8000532:	e050      	b.n	80005d6 <Keypad_manage+0xb6>
	 {
		 GPIO_WritePin(1,0,1);
 8000534:	2201      	movs	r2, #1
 8000536:	2100      	movs	r1, #0
 8000538:	2001      	movs	r0, #1
 800053a:	f7ff ff23 	bl	8000384 <GPIO_WritePin>
		 GPIO_WritePin(1,1,1);
 800053e:	2201      	movs	r2, #1
 8000540:	2101      	movs	r1, #1
 8000542:	2001      	movs	r0, #1
 8000544:	f7ff ff1e 	bl	8000384 <GPIO_WritePin>
		 GPIO_WritePin(1,2,1);
 8000548:	2201      	movs	r2, #1
 800054a:	2102      	movs	r1, #2
 800054c:	2001      	movs	r0, #1
 800054e:	f7ff ff19 	bl	8000384 <GPIO_WritePin>
		 GPIO_WritePin(1,column,0);
 8000552:	79bb      	ldrb	r3, [r7, #6]
 8000554:	2200      	movs	r2, #0
 8000556:	4619      	mov	r1, r3
 8000558:	2001      	movs	r0, #1
 800055a:	f7ff ff13 	bl	8000384 <GPIO_WritePin>
	     for(row=3;row<7;row++){
 800055e:	2303      	movs	r3, #3
 8000560:	71fb      	strb	r3, [r7, #7]
 8000562:	e032      	b.n	80005ca <Keypad_manage+0xaa>
	    	x =GPIO_ReadPin(1,(row));
 8000564:	79fb      	ldrb	r3, [r7, #7]
 8000566:	4619      	mov	r1, r3
 8000568:	2001      	movs	r0, #1
 800056a:	f7ff ff71 	bl	8000450 <GPIO_ReadPin>
 800056e:	4603      	mov	r3, r0
 8000570:	717b      	strb	r3, [r7, #5]
	    	for(k=0;k<1000;k++){}
 8000572:	4b1d      	ldr	r3, [pc, #116]	; (80005e8 <Keypad_manage+0xc8>)
 8000574:	2200      	movs	r2, #0
 8000576:	601a      	str	r2, [r3, #0]
 8000578:	e004      	b.n	8000584 <Keypad_manage+0x64>
 800057a:	4b1b      	ldr	r3, [pc, #108]	; (80005e8 <Keypad_manage+0xc8>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	3301      	adds	r3, #1
 8000580:	4a19      	ldr	r2, [pc, #100]	; (80005e8 <Keypad_manage+0xc8>)
 8000582:	6013      	str	r3, [r2, #0]
 8000584:	4b18      	ldr	r3, [pc, #96]	; (80005e8 <Keypad_manage+0xc8>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800058c:	dbf5      	blt.n	800057a <Keypad_manage+0x5a>
	    	x =GPIO_ReadPin(1,(row));
 800058e:	79fb      	ldrb	r3, [r7, #7]
 8000590:	4619      	mov	r1, r3
 8000592:	2001      	movs	r0, #1
 8000594:	f7ff ff5c 	bl	8000450 <GPIO_ReadPin>
 8000598:	4603      	mov	r3, r0
 800059a:	717b      	strb	r3, [r7, #5]
	    	if (x==0){
 800059c:	797b      	ldrb	r3, [r7, #5]
 800059e:	2b00      	cmp	r3, #0
 80005a0:	d110      	bne.n	80005c4 <Keypad_manage+0xa4>
	    	buttonState=1;
 80005a2:	4b10      	ldr	r3, [pc, #64]	; (80005e4 <Keypad_manage+0xc4>)
 80005a4:	2201      	movs	r2, #1
 80005a6:	701a      	strb	r2, [r3, #0]
	    	key=arr[row-3][column];
 80005a8:	79fb      	ldrb	r3, [r7, #7]
 80005aa:	1eda      	subs	r2, r3, #3
 80005ac:	79b9      	ldrb	r1, [r7, #6]
 80005ae:	480f      	ldr	r0, [pc, #60]	; (80005ec <Keypad_manage+0xcc>)
 80005b0:	4613      	mov	r3, r2
 80005b2:	005b      	lsls	r3, r3, #1
 80005b4:	4413      	add	r3, r2
 80005b6:	4403      	add	r3, r0
 80005b8:	440b      	add	r3, r1
 80005ba:	781a      	ldrb	r2, [r3, #0]
 80005bc:	4b0c      	ldr	r3, [pc, #48]	; (80005f0 <Keypad_manage+0xd0>)
 80005be:	701a      	strb	r2, [r3, #0]
	    	KeypadCallouts_KeyPressNotificaton();
 80005c0:	f000 f852 	bl	8000668 <KeypadCallouts_KeyPressNotificaton>
	     for(row=3;row<7;row++){
 80005c4:	79fb      	ldrb	r3, [r7, #7]
 80005c6:	3301      	adds	r3, #1
 80005c8:	71fb      	strb	r3, [r7, #7]
 80005ca:	79fb      	ldrb	r3, [r7, #7]
 80005cc:	2b06      	cmp	r3, #6
 80005ce:	d9c9      	bls.n	8000564 <Keypad_manage+0x44>
	 for(column=0;column<3;column++)
 80005d0:	79bb      	ldrb	r3, [r7, #6]
 80005d2:	3301      	adds	r3, #1
 80005d4:	71bb      	strb	r3, [r7, #6]
 80005d6:	79bb      	ldrb	r3, [r7, #6]
 80005d8:	2b02      	cmp	r3, #2
 80005da:	d9ab      	bls.n	8000534 <Keypad_manage+0x14>
	    	}
	     }
	     }
	  }
	}
 80005dc:	bf00      	nop
 80005de:	3708      	adds	r7, #8
 80005e0:	46bd      	mov	sp, r7
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	20000084 	.word	0x20000084
 80005e8:	20000088 	.word	0x20000088
 80005ec:	20000050 	.word	0x20000050
 80005f0:	2000008c 	.word	0x2000008c

080005f4 <Keypad_GetKey>:

unsigned char Keypad_GetKey(){
 80005f4:	b480      	push	{r7}
 80005f6:	af00      	add	r7, sp, #0
	if(buttonState==1){
 80005f8:	4b07      	ldr	r3, [pc, #28]	; (8000618 <Keypad_GetKey+0x24>)
 80005fa:	781b      	ldrb	r3, [r3, #0]
 80005fc:	2b01      	cmp	r3, #1
 80005fe:	d105      	bne.n	800060c <Keypad_GetKey+0x18>
		buttonState =0;
 8000600:	4b05      	ldr	r3, [pc, #20]	; (8000618 <Keypad_GetKey+0x24>)
 8000602:	2200      	movs	r2, #0
 8000604:	701a      	strb	r2, [r3, #0]
		return key;
 8000606:	4b05      	ldr	r3, [pc, #20]	; (800061c <Keypad_GetKey+0x28>)
 8000608:	781b      	ldrb	r3, [r3, #0]
 800060a:	e000      	b.n	800060e <Keypad_GetKey+0x1a>
	}
	else
	{
		return -1;
 800060c:	23ff      	movs	r3, #255	; 0xff
	}
}
 800060e:	4618      	mov	r0, r3
 8000610:	46bd      	mov	sp, r7
 8000612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000616:	4770      	bx	lr
 8000618:	20000084 	.word	0x20000084
 800061c:	2000008c 	.word	0x2000008c

08000620 <main>:

int i,j;
unsigned char sevenseg[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
unsigned char y;

int main(void) {
 8000620:	b580      	push	{r7, lr}
 8000622:	af00      	add	r7, sp, #0
	GPIO_EnableClock(0);
 8000624:	2000      	movs	r0, #0
 8000626:	f7ff fdd5 	bl	80001d4 <GPIO_EnableClock>
	GPIO_EnableClock(1);
 800062a:	2001      	movs	r0, #1
 800062c:	f7ff fdd2 	bl	80001d4 <GPIO_EnableClock>
	for (i=0;i<7;i++){
 8000630:	4b0c      	ldr	r3, [pc, #48]	; (8000664 <main+0x44>)
 8000632:	2200      	movs	r2, #0
 8000634:	601a      	str	r2, [r3, #0]
 8000636:	e00c      	b.n	8000652 <main+0x32>
		GPIO_Init(0, i , OUTPUT, PUSH_PULL);
 8000638:	4b0a      	ldr	r3, [pc, #40]	; (8000664 <main+0x44>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	b2d9      	uxtb	r1, r3
 800063e:	2300      	movs	r3, #0
 8000640:	2201      	movs	r2, #1
 8000642:	2000      	movs	r0, #0
 8000644:	f7ff fdde 	bl	8000204 <GPIO_Init>
	for (i=0;i<7;i++){
 8000648:	4b06      	ldr	r3, [pc, #24]	; (8000664 <main+0x44>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	3301      	adds	r3, #1
 800064e:	4a05      	ldr	r2, [pc, #20]	; (8000664 <main+0x44>)
 8000650:	6013      	str	r3, [r2, #0]
 8000652:	4b04      	ldr	r3, [pc, #16]	; (8000664 <main+0x44>)
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	2b06      	cmp	r3, #6
 8000658:	ddee      	ble.n	8000638 <main+0x18>
		}
	Keypdad_init();
 800065a:	f7ff ff33 	bl	80004c4 <Keypdad_init>

  while (1) {
	Keypad_manage();
 800065e:	f7ff ff5f 	bl	8000520 <Keypad_manage>
 8000662:	e7fc      	b.n	800065e <main+0x3e>
 8000664:	20000094 	.word	0x20000094

08000668 <KeypadCallouts_KeyPressNotificaton>:

  return 0;
}

void  KeypadCallouts_KeyPressNotificaton()
	{
 8000668:	b580      	push	{r7, lr}
 800066a:	af00      	add	r7, sp, #0
		y= Keypad_GetKey();
 800066c:	f7ff ffc2 	bl	80005f4 <Keypad_GetKey>
 8000670:	4603      	mov	r3, r0
 8000672:	461a      	mov	r2, r3
 8000674:	4b1a      	ldr	r3, [pc, #104]	; (80006e0 <KeypadCallouts_KeyPressNotificaton+0x78>)
 8000676:	701a      	strb	r2, [r3, #0]
		for(j=0;j<7;j++){
 8000678:	4b1a      	ldr	r3, [pc, #104]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 800067a:	2200      	movs	r2, #0
 800067c:	601a      	str	r2, [r3, #0]
 800067e:	e028      	b.n	80006d2 <KeypadCallouts_KeyPressNotificaton+0x6a>
		    if((sevenseg[y] & (1<<j))>>j){
 8000680:	4b17      	ldr	r3, [pc, #92]	; (80006e0 <KeypadCallouts_KeyPressNotificaton+0x78>)
 8000682:	781b      	ldrb	r3, [r3, #0]
 8000684:	461a      	mov	r2, r3
 8000686:	4b18      	ldr	r3, [pc, #96]	; (80006e8 <KeypadCallouts_KeyPressNotificaton+0x80>)
 8000688:	5c9b      	ldrb	r3, [r3, r2]
 800068a:	4619      	mov	r1, r3
 800068c:	4b15      	ldr	r3, [pc, #84]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	2201      	movs	r2, #1
 8000692:	fa02 f303 	lsl.w	r3, r2, r3
 8000696:	ea01 0203 	and.w	r2, r1, r3
 800069a:	4b12      	ldr	r3, [pc, #72]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	fa42 f303 	asr.w	r3, r2, r3
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d008      	beq.n	80006b8 <KeypadCallouts_KeyPressNotificaton+0x50>
      			GPIO_WritePin(0, j, 1);
 80006a6:	4b0f      	ldr	r3, [pc, #60]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	b2db      	uxtb	r3, r3
 80006ac:	2201      	movs	r2, #1
 80006ae:	4619      	mov	r1, r3
 80006b0:	2000      	movs	r0, #0
 80006b2:	f7ff fe67 	bl	8000384 <GPIO_WritePin>
 80006b6:	e007      	b.n	80006c8 <KeypadCallouts_KeyPressNotificaton+0x60>
	            		}
		    else {
		    	GPIO_WritePin(0, j, 0);
 80006b8:	4b0a      	ldr	r3, [pc, #40]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	b2db      	uxtb	r3, r3
 80006be:	2200      	movs	r2, #0
 80006c0:	4619      	mov	r1, r3
 80006c2:	2000      	movs	r0, #0
 80006c4:	f7ff fe5e 	bl	8000384 <GPIO_WritePin>
		for(j=0;j<7;j++){
 80006c8:	4b06      	ldr	r3, [pc, #24]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	3301      	adds	r3, #1
 80006ce:	4a05      	ldr	r2, [pc, #20]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 80006d0:	6013      	str	r3, [r2, #0]
 80006d2:	4b04      	ldr	r3, [pc, #16]	; (80006e4 <KeypadCallouts_KeyPressNotificaton+0x7c>)
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	2b06      	cmp	r3, #6
 80006d8:	ddd2      	ble.n	8000680 <KeypadCallouts_KeyPressNotificaton+0x18>
		    	 }
		    			}
	}
 80006da:	bf00      	nop
 80006dc:	bf00      	nop
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	20000098 	.word	0x20000098
 80006e4:	20000090 	.word	0x20000090
 80006e8:	2000005c 	.word	0x2000005c

080006ec <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80006ec:	b480      	push	{r7}
 80006ee:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80006f0:	4b06      	ldr	r3, [pc, #24]	; (800070c <SystemInit+0x20>)
 80006f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80006f6:	4a05      	ldr	r2, [pc, #20]	; (800070c <SystemInit+0x20>)
 80006f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80006fc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000700:	bf00      	nop
 8000702:	46bd      	mov	sp, r7
 8000704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000708:	4770      	bx	lr
 800070a:	bf00      	nop
 800070c:	e000ed00 	.word	0xe000ed00

08000710 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000710:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000748 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000714:	480d      	ldr	r0, [pc, #52]	; (800074c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000716:	490e      	ldr	r1, [pc, #56]	; (8000750 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000718:	4a0e      	ldr	r2, [pc, #56]	; (8000754 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800071a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800071c:	e002      	b.n	8000724 <LoopCopyDataInit>

0800071e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800071e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000720:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000722:	3304      	adds	r3, #4

08000724 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000724:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000726:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000728:	d3f9      	bcc.n	800071e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800072a:	4a0b      	ldr	r2, [pc, #44]	; (8000758 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 800072c:	4c0b      	ldr	r4, [pc, #44]	; (800075c <LoopFillZerobss+0x26>)
  movs r3, #0
 800072e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000730:	e001      	b.n	8000736 <LoopFillZerobss>

08000732 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000732:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000734:	3204      	adds	r2, #4

08000736 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000736:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000738:	d3fb      	bcc.n	8000732 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800073a:	f7ff ffd7 	bl	80006ec <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800073e:	f000 f811 	bl	8000764 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000742:	f7ff ff6d 	bl	8000620 <main>
  bx  lr    
 8000746:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000748:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800074c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000750:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000754:	080007cc 	.word	0x080007cc
  ldr r2, =_sbss
 8000758:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 800075c:	2000009c 	.word	0x2000009c

08000760 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000760:	e7fe      	b.n	8000760 <ADC_IRQHandler>
	...

08000764 <__libc_init_array>:
 8000764:	b570      	push	{r4, r5, r6, lr}
 8000766:	4d0d      	ldr	r5, [pc, #52]	; (800079c <__libc_init_array+0x38>)
 8000768:	4c0d      	ldr	r4, [pc, #52]	; (80007a0 <__libc_init_array+0x3c>)
 800076a:	1b64      	subs	r4, r4, r5
 800076c:	10a4      	asrs	r4, r4, #2
 800076e:	2600      	movs	r6, #0
 8000770:	42a6      	cmp	r6, r4
 8000772:	d109      	bne.n	8000788 <__libc_init_array+0x24>
 8000774:	4d0b      	ldr	r5, [pc, #44]	; (80007a4 <__libc_init_array+0x40>)
 8000776:	4c0c      	ldr	r4, [pc, #48]	; (80007a8 <__libc_init_array+0x44>)
 8000778:	f000 f818 	bl	80007ac <_init>
 800077c:	1b64      	subs	r4, r4, r5
 800077e:	10a4      	asrs	r4, r4, #2
 8000780:	2600      	movs	r6, #0
 8000782:	42a6      	cmp	r6, r4
 8000784:	d105      	bne.n	8000792 <__libc_init_array+0x2e>
 8000786:	bd70      	pop	{r4, r5, r6, pc}
 8000788:	f855 3b04 	ldr.w	r3, [r5], #4
 800078c:	4798      	blx	r3
 800078e:	3601      	adds	r6, #1
 8000790:	e7ee      	b.n	8000770 <__libc_init_array+0xc>
 8000792:	f855 3b04 	ldr.w	r3, [r5], #4
 8000796:	4798      	blx	r3
 8000798:	3601      	adds	r6, #1
 800079a:	e7f2      	b.n	8000782 <__libc_init_array+0x1e>
 800079c:	080007c4 	.word	0x080007c4
 80007a0:	080007c4 	.word	0x080007c4
 80007a4:	080007c4 	.word	0x080007c4
 80007a8:	080007c8 	.word	0x080007c8

080007ac <_init>:
 80007ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ae:	bf00      	nop
 80007b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007b2:	bc08      	pop	{r3}
 80007b4:	469e      	mov	lr, r3
 80007b6:	4770      	bx	lr

080007b8 <_fini>:
 80007b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ba:	bf00      	nop
 80007bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007be:	bc08      	pop	{r3}
 80007c0:	469e      	mov	lr, r3
 80007c2:	4770      	bx	lr
